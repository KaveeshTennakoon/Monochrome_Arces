{
    "info": {
        "_postman_id": "3b5a3b54-3e8e-4c51-90fd-9a7a0f2b0d60",
        "name": "Monochrome Arces API",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
        "description": "Postman collection for Auth, User, Admin and SuperAdmin endpoints. Uses Bearer tokens from login/refresh flows."
    },
    "item": [
        {
            "name": "Auth",
            "item": [
                {
                    "name": "Login",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/api/auth/login",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "auth",
                                "login"
                            ]
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"username\": \"admin\",\n  \"password\": \"admin123\"\n}"
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test('Status 200', function () { pm.response.to.have.status(200); });",
                                    "const data = pm.response.json();",
                                    "pm.expect(data).to.have.property('token');",
                                    "pm.collectionVariables.set('token', data.token);",
                                    "if (data.refreshToken) { pm.collectionVariables.set('refreshToken', data.refreshToken); }",
                                    "if (data.user) {",
                                    "  pm.collectionVariables.set('username', data.user.username || '');",
                                    "  pm.collectionVariables.set('role', data.user.role || '');",
                                    "}"
                                ]
                            }
                        }
                    ],
                    "response": []
                },
                {
                    "name": "Refresh Token",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/api/auth/refresh",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "auth",
                                "refresh"
                            ]
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"refreshToken\": \"{{refreshToken}}\"\n}"
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test('Status 200', function () { pm.response.to.have.status(200); });",
                                    "const data = pm.response.json();",
                                    "pm.expect(data).to.have.property('token');",
                                    "pm.collectionVariables.set('token', data.token);"
                                ]
                            }
                        }
                    ],
                    "response": []
                },
                {
                    "name": "Logout",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{token}}"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/api/auth/logout",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "auth",
                                "logout"
                            ]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test('Status 204', function () { pm.response.to.have.status(204); });"
                                ]
                            }
                        }
                    ],
                    "response": []
                },
                {
                    "name": "Me",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{token}}"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/api/auth/me",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "auth",
                                "me"
                            ]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test('Status 200', function () { pm.response.to.have.status(200); });"
                                ]
                            }
                        }
                    ],
                    "response": []
                },
                {
                    "name": "Register",
                    "request": {
                        "method": "POST",
                        "header": [
                            { "key": "Content-Type", "value": "application/json" },
                            { "key": "Authorization", "value": "Bearer {{token}}" }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/api/auth/register",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "auth",
                                "register"
                            ]
                        },
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"username\": \"newuser\",\n  \"email\": \"newuser@example.com\",\n  \"password\": \"NewUser@2025\",\n  \"name\": \"New User\",\n  \"department\": \"Land Registry Department\",\n  \"role\": \"ADMIN\",\n  \"permissions\": [\"appointments\", \"services\"]\n}"
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test('Status 201', function () { pm.response.to.have.status(201); });",
                                    "const data = pm.response.json();",
                                    "pm.expect(data).to.have.property('token');",
                                    "pm.collectionVariables.set('token', data.token);",
                                    "if (data.refreshToken) { pm.collectionVariables.set('refreshToken', data.refreshToken); }",
                                    "if (data.user) {",
                                    "  pm.collectionVariables.set('username', data.user.username || '');",
                                    "  pm.collectionVariables.set('role', data.user.role || '');",
                                    "}"
                                ]
                            }
                        }
                    ],
                    "response": []
                }
            ]
        },
        {
            "name": "Admin",
            "item": [
                {
                    "name": "Admin Demo",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{token}}"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/api/admin/demo",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "admin",
                                "demo"
                            ]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test('Status 200', function () { pm.response.to.have.status(200); });"
                                ]
                            }
                        }
                    ],
                    "response": []
                }
            ]
        },
        {
            "name": "SuperAdmin",
            "item": [
                {
                    "name": "SuperAdmin Demo",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{token}}"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/api/superadmin/demo",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "superadmin",
                                "demo"
                            ]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test('Status 200', function () { pm.response.to.have.status(200); });"
                                ]
                            }
                        }
                    ],
                    "response": []
                }
            ]
        }
    ],
    "event": [],
    "variable": [
        {
            "key": "baseUrl",
            "value": "http://localhost:8080"
        },
        {
            "key": "token",
            "value": ""
        },
        {
            "key": "refreshToken",
            "value": ""
        },
        {
            "key": "username",
            "value": ""
        },
        {
            "key": "role",
            "value": ""
        }
    ]
}